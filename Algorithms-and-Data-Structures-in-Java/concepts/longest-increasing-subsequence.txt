-----------------------------------O(N^2)--------------------------------------------------------
LIS(i) - Length of longest increasing subsequence which includes element A[i] as its last element.
LIS(i) = 1 + Max j=1 to i-1 {LIS(j)} if A[i]>A[j] for 1<j<i
          =   1 if no such j exists.

          Example:

          A[] = {3, 4, 1, 5}

          i=1 , LIS(1) = 1

          i=2 , LIS(2) = 1+ Max(LIS(1)) = 1 +1 =2 (4>3)

          i=3 , LIS(3) = 1 (1>3, 1>4)

          i=4 , LIS(4) = 1+ Max(LIS(1),LIS(2), LIS(3))

          = 1 + Max(1,2,1) = 3

          find the index which con­tains the longest sequence, print that index from main array.
          Start mov­ing back­wards and pick all the indexes which are in sequence (descending).
          If longest sequence for more than one indexes, pick any one.

          int[] A = { 1, 12, 7, 0, 23, 11, 52, 31, 61, 69, 70, 2 };

          Output:
          Longest Increasing subsequence: 7
          Actual Elements: 1 7 11 31 61 69 70


-----------------------------------O(NlogN)---------------------------------------------------------
Our strategy determined by the following conditions,

1. If A[i] is smallest among all end candidates of active lists, we will start new active list of length 1.
2. If A[i] is largest among all end candidates of active lists, we will clone the largest active list, and extend it by A[i].
3. If A[i] is in between, we will find a list with largest end element that is smaller than A[i]. Clone and extend this list by A[i].
We will discard all other lists of same length as that of this modified list.

                         Note that at any instance during our construction of active lists, the following condition is maintained.
                         “end element of smaller list is smaller than end elements of larger lists”.
                         It will be clear with an example, let us take example from wiki {0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15}.
                         A[0] = 0. Case 1. There are no active lists, create one.
                         0.
                         -----------------------------------------------------------------------------
                         A[1] = 8. Case 2. Clone and extend.
                         0.
                         0, 8.
                         -----------------------------------------------------------------------------
                         A[2] = 4. Case 3. Clone, extend and discard.
                         0.
                         0, 4.
                         0, 8. Discarded
                         -----------------------------------------------------------------------------
                         A[3] = 12. Case 2. Clone and extend.
                         0.
                         0, 4.
                         0, 4, 12.
                         -----------------------------------------------------------------------------
                         A[4] = 2. Case 3. Clone, extend and discard.
                         0.
                         0, 2.
                         0, 4. Discarded.
                         0, 4, 12.
                         -----------------------------------------------------------------------------
                         A[5] = 10. Case 3. Clone, extend and discard.
                         0.
                         0, 2.
                         0, 2, 10.
                         0, 4, 12. Discarded.
                         -----------------------------------------------------------------------------
                         A[6] = 6. Case 3. Clone, extend and discard.
                         0.
                         0, 2.
                         0, 2, 6.
                         0, 2, 10. Discarded.
                         -----------------------------------------------------------------------------
                         A[7] = 14. Case 2. Clone and extend.
                         0.
                         0, 2.
                         0, 2, 6.
                         0, 2, 6, 14.
                         -----------------------------------------------------------------------------
                         A[8] = 1. Case 3. Clone, extend and discard.
                         0.
                         0, 1.
                         0, 2. Discarded.
                         0, 2, 6.
                         0, 2, 6, 14.
                         -----------------------------------------------------------------------------
                         A[9] = 9. Case 3. Clone, extend and discard.
                         0.
                         0, 1.
                         0, 2, 6.
                         0, 2, 6, 9.
                         0, 2, 6, 14. Discarded.
                         -----------------------------------------------------------------------------
                         A[10] = 5. Case 3. Clone, extend and discard.
                         0.
                         0, 1.
                         0, 1, 5.
                         0, 2, 6. Discarded.
                         0, 2, 6, 9.
                         -----------------------------------------------------------------------------
                         A[11] = 13. Case 2. Clone and extend.
                         0.
                         0, 1.
                         0, 1, 5.
                         0, 2, 6, 9.
                         0, 2, 6, 9, 13.
                         -----------------------------------------------------------------------------
                         A[12] = 3. Case 3. Clone, extend and discard.
                         0.
                         0, 1.
                         0, 1, 3.
                         0, 1, 5. Discarded.
                         0, 2, 6, 9.
                         0, 2, 6, 9, 13.
                         -----------------------------------------------------------------------------
                         A[13] = 11. Case 3. Clone, extend and discard.
                         0.
                         0, 1.
                         0, 1, 3.
                         0, 2, 6, 9.
                         0, 2, 6, 9, 11.
                         0, 2, 6, 9, 13. Discarded.
                         -----------------------------------------------------------------------------
                         A[14] = 7. Case 3. Clone, extend and discard.
                         0.
                         0, 1.
                         0, 1, 3.
                         0, 1, 3, 7.
                         0, 2, 6, 9. Discarded.
                         0, 2, 6, 9, 11.
                         ----------------------------------------------------------------------------
                         A[15] = 15. Case 2. Clone and extend.
                         0.
                         0, 1.
                         0, 1, 3.
                         0, 1, 3, 7.
                         0, 2, 6, 9, 11.
                         0, 2, 6, 9, 11, 15. <-- LIS List
                         ----------------------------------------------------------------------------